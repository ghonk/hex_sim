library(lmerTest)
library(rmarkdown)
install.packages('dplyr')
library(shiny)
quit()
library(rmarkdown)
library(knitr)
============================================================
##Interface
Switch it up: Learning Categories via Feature Switching - Honke, Conaway and Kurtz
----------------------------------------------------------------
}}
datafile <- 'http://bingweb.binghamton.edu/~ghonke1/data/switch/switchrite_final.r')
datafull <- read.csv(datafile, stringsAsFactors = FALSE)
datafile <- 'http://bingweb.binghamton.edu/~ghonke1/data/switch/switchrite_final.csv'
datafull <- read.csv(datafile, stringsAsFactors = FALSE)
str(datafull)
reconcile_matches <- function(all_data, probs){
for (idx in range(1:2)) {
if (idx == 1) {
# # # FIND OPTIONS
name_matches <- lapply(all_data$Last.Name[probs$mc_score],
function(x) {
agrep(x, all_data$Last.Name[probs$fb_score], max.distance = 0.1)
}
)
# # # RUN THRU LIST AND MAKE CORRECTIONS
for (idx_fb in 1:length(name_matches)){
# # # PRINT TARGET
cat(rep('-', 40), '\n')
cat(rep('-', 40), '\n')
print(all_data[ probs$fb_score[idx_fb], ])
# # # IF MATCHES WERE FOUND
if (length(name_matches[[idx_fb]]) > 0) {
# # # PRESENT MATCHES AND ASK IF THEY SHOULD BE COMBINED
for (opts in 1:length(name_matches[[idx_fb]])) {
if (opts != 1) print(all_data[ probs$fb_score[idx_fb], ])
cat(rep('-', 4), '\n')
cat(rep('-', 4), '\n')
print(all_data[ name_matches[[idx_fb]][[opts]], ])
response <- readline('Do these a match? (y/n)')
cat(rep('-', 40), '\n')
cat(rep('-', 40), '\n')
cat(rep('-', 40), '\n')
cat(rep('-', 40), '\n')
}
# # # NO MATCHES FOR THIS ONE
} else {
readline("There dont seem to be any matches. Strike key to continue.")
}
}
} else {
name_matches <- lapply(all_data$Last.Name[probs$mc_score],
function(x) {
agrep(x, all_data$Last.Name, max.distance = 0.1)
}
)
}
}
}
140/200
120/200
150/200
145/200
135/200
190/200
130/200
1/200
2/100
q()
library(ggplot2)
library(dplyr)
setwd('C:/Users/garre/Dropbox/aa projects/choootooo/hex_sim/data/4.16.16')
df <- read.csv('hexsim_2016-04-20.csv')
dir.create("examples")
setwd("examples")
n_table <- with(df, tapply(pid, cond, FUN = function(x) length(unique(x))))
df$diff_from_chance <-
saveGIF({
for (i in 1:59) {
plot_title <- paste0('trial: ', as.character(i))
trial_data <- filter(df, trial < i + 1)
binom.test
cond_plot <- ggplot(aggregate(tax_sel ~ cond + pid, mean, data = trial_data),
aes(x = as.factor(cond), y = tax_sel)) +
geom_jitter(alpha = .75, position = position_jitter(width = .3, height = 0)) +
scale_alpha_continuous(range = , legend = FALSE) +
stat_summary(fun.y = mean, geom = 'point', shape = 18, color = 'black',
size = 4, show.legend = FALSE) + ggtitle(plot_title) +
theme(plot.title = element_text(size=26, vjust=2),
axis.title.y = element_text(size=22, margin = margin(0,10,0,0)),
axis.text.y = element_text(size=18, color = 'black'),
axis.title.x = element_text(size=22, margin = margin(10,0,0,0)),
axis.text.x = element_text(size = 18, color = 'black')) +
scale_y_continuous(limits=c(0,1.001), breaks=seq(0, 1, 0.1),
name = 'Proportion Taxonomic') +
scale_x_discrete(name = 'Condition',
limits = c('sextet_base','sextet_rand','triad_base','triad_rand', 'triad_goes'),
labels = c('Base\n5 Targets', 'No Base\n6 Targets',
'Base\n2 Targets', 'No Base\n3 Targets', 'Goes\nWith')) +
coord_cartesian(ylim = c(0,1))
print(cond_plot)
}
}, movie.name = 'hex_sim_data_nobox.gif', interval = 0.4, ani.width = 700, ani.height = 600)
library(animation)
library(ggplot2)
library(dplyr)
setwd('C:/Users/garre/Dropbox/aa projects/choootooo/hex_sim/data/4.16.16')
df <- read.csv('hexsim_2016-04-20.csv')
dir.create("examples")
setwd("examples")
n_table <- with(df, tapply(pid, cond, FUN = function(x) length(unique(x))))
df$diff_from_chance <-
saveGIF({
for (i in 1:59) {
plot_title <- paste0('trial: ', as.character(i))
trial_data <- filter(df, trial < i + 1)
binom.test
cond_plot <- ggplot(aggregate(tax_sel ~ cond + pid, mean, data = trial_data),
aes(x = as.factor(cond), y = tax_sel)) +
geom_jitter(alpha = .75, position = position_jitter(width = .3, height = 0)) +
scale_alpha_continuous(range = , legend = FALSE) +
stat_summary(fun.y = mean, geom = 'point', shape = 18, color = 'black',
size = 4, show.legend = FALSE) + ggtitle(plot_title) +
theme(plot.title = element_text(size=26, vjust=2),
axis.title.y = element_text(size=22, margin = margin(0,10,0,0)),
axis.text.y = element_text(size=18, color = 'black'),
axis.title.x = element_text(size=22, margin = margin(10,0,0,0)),
axis.text.x = element_text(size = 18, color = 'black')) +
scale_y_continuous(limits=c(0,1.001), breaks=seq(0, 1, 0.1),
name = 'Proportion Taxonomic') +
scale_x_discrete(name = 'Condition',
limits = c('sextet_base','sextet_rand','triad_base','triad_rand', 'triad_goes'),
labels = c('Base\n5 Targets', 'No Base\n6 Targets',
'Base\n2 Targets', 'No Base\n3 Targets', 'Goes\nWith')) +
coord_cartesian(ylim = c(0,1))
print(cond_plot)
}
}, movie.name = 'hex_sim_data_nobox.gif', interval = 0.4, ani.width = 700, ani.height = 600)
library(ggplot2)
library(dplyr)
setwd('C:/Users/garre/Dropbox/aa projects/choootooo/hex_sim/data/4.16.16')
df <- read.csv('hexsim_2016-04-20.csv')
dir.create("examples")
setwd("examples")
n_table <- with(df, tapply(pid, cond, FUN = function(x) length(unique(x))))
df$diff_from_chance <-
saveGIF({
for (i in 1:59) {
plot_title <- paste0('trial: ', as.character(i))
trial_data <- filter(df, trial < i + 1)
binom.test
cond_plot <- ggplot(aggregate(tax_sel ~ cond + pid, mean, data = trial_data),
aes(x = as.factor(cond), y = tax_sel)) +
geom_jitter(alpha = .75, position = position_jitter(width = .3, height = 0)) +
stat_summary(fun.y = mean, geom = 'point', shape = 18, color = 'black',
size = 4, show.legend = FALSE) + ggtitle(plot_title) +
theme(plot.title = element_text(size=26, vjust=2),
axis.title.y = element_text(size=22, margin = margin(0,10,0,0)),
axis.text.y = element_text(size=18, color = 'black'),
axis.title.x = element_text(size=22, margin = margin(10,0,0,0)),
axis.text.x = element_text(size = 18, color = 'black')) +
scale_y_continuous(limits=c(0,1.001), breaks=seq(0, 1, 0.1),
name = 'Proportion Taxonomic') +
scale_x_discrete(name = 'Condition',
limits = c('sextet_base','sextet_rand','triad_base','triad_rand', 'triad_goes'),
labels = c('Base\n5 Targets', 'No Base\n6 Targets',
'Base\n2 Targets', 'No Base\n3 Targets', 'Goes\nWith')) +
coord_cartesian(ylim = c(0,1))
print(cond_plot)
}
}, movie.name = 'hex_sim_data_nobox.gif', interval = 0.4, ani.width = 700, ani.height = 600)
library(ggplot2)
library(dplyr)
setwd('C:/Users/garre/Dropbox/aa projects/choootooo/hex_sim/data/4.16.16')
df <- read.csv('hexsim_2016-04-20.csv')
dir.create("examples")
setwd("examples")
n_table <- with(df, tapply(pid, cond, FUN = function(x) length(unique(x))))
df$diff_from_chance <-
saveGIF({
for (i in 1:59) {
plot_title <- paste0('trial: ', as.character(i))
trial_data <- filter(df, trial < i + 1)
binom.test
cond_plot <- ggplot(aggregate(tax_sel ~ cond + pid, mean, data = trial_data),
aes(x = as.factor(cond), y = tax_sel)) +
geom_jitter(alpha = .75, position = position_jitter(width = .3, height = 0)) +
stat_summary(fun.y = mean, geom = 'point', shape = 18, color = 'black',
size = 4, show.legend = FALSE) + ggtitle(plot_title) +
theme(plot.title = element_text(size=26, vjust=2),
axis.title.y = element_text(size=22, margin = margin(0,10,0,0)),
axis.text.y = element_text(size=18, color = 'black'),
axis.title.x = element_text(size=22, margin = margin(10,0,0,0)),
axis.text.x = element_text(size = 18, color = 'black')) +
scale_y_continuous(limits=c(0,1.001), breaks=seq(0, 1, 0.1),
name = 'Proportion Taxonomic') +
scale_x_discrete(name = 'Condition',
limits = c('sextet_base','sextet_rand','triad_base','triad_rand', 'triad_goes'),
labels = c('Base\n5 Targets', 'No Base\n6 Targets',
'Base\n2 Targets', 'No Base\n3 Targets', 'Goes\nWith')) +
coord_cartesian(ylim = c(0,1))
print(cond_plot)
}
}, movie.name = 'hex_sim_data_nobox.gif', interval = 0.1, ani.width = 700, ani.height = 600)
library(ggplot2)
library(dplyr)
setwd('C:/Users/garre/Dropbox/aa projects/choootooo/hex_sim/data/4.16.16')
df <- read.csv('hexsim_2016-04-20.csv')
dir.create("examples")
setwd("examples")
n_table <- with(df, tapply(pid, cond, FUN = function(x) length(unique(x))))
df$diff_from_chance <-
saveGIF({
for (i in 1:59) {
plot_title <- paste0('trial: ', as.character(i))
trial_data <- filter(df, trial < i + 1)
binom.test
cond_plot <- ggplot(aggregate(tax_sel ~ cond + pid, mean, data = trial_data),
aes(x = as.factor(cond), y = tax_sel)) +
geom_point() +
stat_summary(fun.y = mean, geom = 'point', shape = 18, color = 'black',
size = 4, show.legend = FALSE) + ggtitle(plot_title) +
theme(plot.title = element_text(size=26, vjust=2),
axis.title.y = element_text(size=22, margin = margin(0,10,0,0)),
axis.text.y = element_text(size=18, color = 'black'),
axis.title.x = element_text(size=22, margin = margin(10,0,0,0)),
axis.text.x = element_text(size = 18, color = 'black')) +
scale_y_continuous(limits=c(0,1.001), breaks=seq(0, 1, 0.1),
name = 'Proportion Taxonomic') +
scale_x_discrete(name = 'Condition',
limits = c('sextet_base','sextet_rand','triad_base','triad_rand', 'triad_goes'),
labels = c('Base\n5 Targets', 'No Base\n6 Targets',
'Base\n2 Targets', 'No Base\n3 Targets', 'Goes\nWith')) +
coord_cartesian(ylim = c(0,1))
print(cond_plot)
}
}, movie.name = 'hex_sim_data_nobox.gif', interval = 0.1, ani.width = 700, ani.height = 600)
library(ggplot2)
library(dplyr)
setwd('C:/Users/garre/Dropbox/aa projects/choootooo/hex_sim/data/4.16.16')
df <- read.csv('hexsim_2016-04-20.csv')
dir.create("examples")
setwd("examples")
n_table <- with(df, tapply(pid, cond, FUN = function(x) length(unique(x))))
df$diff_from_chance <-
saveGIF({
for (i in 1:59) {
plot_title <- paste0('trial: ', as.character(i))
trial_data <- filter(df, trial < i + 1)
binom.test
cond_plot <- ggplot(aggregate(tax_sel ~ cond + pid, mean, data = trial_data),
aes(x = as.factor(cond), y = tax_sel)) +
geom_jitter(alpha = .75, position = position_jitter(width = .5, height = 0)) +
stat_summary(fun.y = mean, geom = 'point', shape = 18, color = 'black',
size = 4, show.legend = FALSE) + ggtitle(plot_title) +
theme(plot.title = element_text(size=26, vjust=2),
axis.title.y = element_text(size=22, margin = margin(0,10,0,0)),
axis.text.y = element_text(size=18, color = 'black'),
axis.title.x = element_text(size=22, margin = margin(10,0,0,0)),
axis.text.x = element_text(size = 18, color = 'black')) +
scale_y_continuous(limits=c(0,1.001), breaks=seq(0, 1, 0.1),
name = 'Proportion Taxonomic') +
scale_x_discrete(name = 'Condition',
limits = c('sextet_base','sextet_rand','triad_base','triad_rand', 'triad_goes'),
labels = c('Base\n5 Targets', 'No Base\n6 Targets',
'Base\n2 Targets', 'No Base\n3 Targets', 'Goes\nWith')) +
coord_cartesian(ylim = c(0,1))
print(cond_plot)
}
}, movie.name = 'hex_sim_data_nobox.gif', interval = 0.1, ani.width = 700, ani.height = 600)
library(ggplot2)
library(dplyr)
setwd('C:/Users/garre/Dropbox/aa projects/choootooo/hex_sim/data/4.16.16')
df <- read.csv('hexsim_2016-04-20.csv')
dir.create("examples")
setwd("examples")
n_table <- with(df, tapply(pid, cond, FUN = function(x) length(unique(x))))
df$diff_from_chance <-
saveGIF({
for (i in 1:59) {
plot_title <- paste0('trial: ', as.character(i))
trial_data <- filter(df, trial < i + 1)
binom.test
cond_plot <- ggplot(aggregate(tax_sel ~ cond + pid, mean, data = trial_data),
aes(x = as.factor(cond), y = tax_sel)) +
geom_violin()) +
stat_summary(fun.y = mean, geom = 'point', shape = 18, color = 'black',
size = 4, show.legend = FALSE) + ggtitle(plot_title) +
theme(plot.title = element_text(size=26, vjust=2),
axis.title.y = element_text(size=22, margin = margin(0,10,0,0)),
axis.text.y = element_text(size=18, color = 'black'),
axis.title.x = element_text(size=22, margin = margin(10,0,0,0)),
axis.text.x = element_text(size = 18, color = 'black')) +
scale_y_continuous(limits=c(0,1.001), breaks=seq(0, 1, 0.1),
name = 'Proportion Taxonomic') +
scale_x_discrete(name = 'Condition',
limits = c('sextet_base','sextet_rand','triad_base','triad_rand', 'triad_goes'),
labels = c('Base\n5 Targets', 'No Base\n6 Targets',
'Base\n2 Targets', 'No Base\n3 Targets', 'Goes\nWith')) +
coord_cartesian(ylim = c(0,1))
print(cond_plot)
}
}, movie.name = 'hex_sim_data_nobox.gif', interval = 0.1, ani.width = 700, ani.height = 600)
library(ggplot2)
library(dplyr)
setwd('C:/Users/garre/Dropbox/aa projects/choootooo/hex_sim/data/4.16.16')
df <- read.csv('hexsim_2016-04-20.csv')
dir.create("examples")
setwd("examples")
n_table <- with(df, tapply(pid, cond, FUN = function(x) length(unique(x))))
df$diff_from_chance <-
saveGIF({
for (i in 1:59) {
plot_title <- paste0('trial: ', as.character(i))
trial_data <- filter(df, trial < i + 1)
binom.test
cond_plot <- ggplot(aggregate(tax_sel ~ cond + pid, mean, data = trial_data),
aes(x = as.factor(cond), y = tax_sel)) +
geom_violin() +
stat_summary(fun.y = mean, geom = 'point', shape = 18, color = 'black',
size = 4, show.legend = FALSE) + ggtitle(plot_title) +
theme(plot.title = element_text(size=26, vjust=2),
axis.title.y = element_text(size=22, margin = margin(0,10,0,0)),
axis.text.y = element_text(size=18, color = 'black'),
axis.title.x = element_text(size=22, margin = margin(10,0,0,0)),
axis.text.x = element_text(size = 18, color = 'black')) +
scale_y_continuous(limits=c(0,1.001), breaks=seq(0, 1, 0.1),
name = 'Proportion Taxonomic') +
scale_x_discrete(name = 'Condition',
limits = c('sextet_base','sextet_rand','triad_base','triad_rand', 'triad_goes'),
labels = c('Base\n5 Targets', 'No Base\n6 Targets',
'Base\n2 Targets', 'No Base\n3 Targets', 'Goes\nWith')) +
coord_cartesian(ylim = c(0,1))
print(cond_plot)
}
}, movie.name = 'hex_sim_data_nobox.gif', interval = 0.1, ani.width = 700, ani.height = 600)
library(ggplot2)
library(dplyr)
setwd('C:/Users/garre/Dropbox/aa projects/choootooo/hex_sim/data/4.16.16')
df <- read.csv('hexsim_2016-04-20.csv')
dir.create("examples")
setwd("examples")
n_table <- with(df, tapply(pid, cond, FUN = function(x) length(unique(x))))
df$diff_from_chance <-
saveGIF({
for (i in 1:59) {
plot_title <- paste0('trial: ', as.character(i))
trial_data <- filter(df, trial < i + 1)
binom.test
cond_plot <- ggplot(aggregate(tax_sel ~ cond + pid, mean, data = trial_data),
aes(x = as.factor(cond), y = tax_sel)) +
geom_violin() +
stat_summary(fun.y = mean, geom = 'point', shape = 18, color = 'black',
size = 4, show.legend = FALSE) + ggtitle(plot_title) +
theme(plot.title = element_text(size=26, vjust=2),
axis.title.y = element_text(size=22, margin = margin(0,10,0,0)),
axis.text.y = element_text(size=18, color = 'black'),
axis.title.x = element_text(size=22, margin = margin(10,0,0,0)),
axis.text.x = element_text(size = 18, color = 'black')) +
scale_y_continuous(limits=c(0,1.001), breaks=seq(0, 1, 0.1),
name = 'Proportion Taxonomic') +
scale_x_discrete(name = 'Condition',
limits = c('sextet_base','sextet_rand','triad_base','triad_rand', 'triad_goes'),
labels = c('Base\n5 Targets', 'No Base\n6 Targets',
'Base\n2 Targets', 'No Base\n3 Targets', 'Goes\nWith')) +
coord_cartesian(ylim = c(0,1))
print(cond_plot)
}
}, movie.name = 'hex_sim_data_nobox.gif', interval = 0.1, ani.width = 700, ani.height = 600)
library(ggplot2)
library(dplyr)
setwd('C:/Users/garre/Dropbox/aa projects/choootooo/hex_sim/data/4.16.16')
df <- read.csv('hexsim_2016-04-20.csv')
dir.create("examples")
setwd("examples")
n_table <- with(df, tapply(pid, cond, FUN = function(x) length(unique(x))))
df$diff_from_chance <-
saveGIF({
for (i in 1:59) {
plot_title <- paste0('trial: ', as.character(i))
trial_data <- filter(df, trial < i + 1)
binom.test
cond_plot <- ggplot(aggregate(tax_sel ~ cond + pid, mean, data = trial_data),
aes(x = as.factor(cond), y = tax_sel)) +
geom_jitter(alpha = .75, position = position_jitter(width = .5, height = 0)) +
stat_summary(fun.y = mean, geom = 'point', shape = 18, color = 'black',
size = 4, show.legend = FALSE) + ggtitle(plot_title) +
theme(plot.title = element_text(size=26, vjust=2),
axis.title.y = element_text(size=22, margin = margin(0,10,0,0)),
axis.text.y = element_text(size=18, color = 'black'),
axis.title.x = element_text(size=22, margin = margin(10,0,0,0)),
axis.text.x = element_text(size = 18, color = 'black')) +
scale_y_continuous(limits=c(0,1.001), breaks=seq(0, 1, 0.1),
name = 'Proportion Taxonomic') +
scale_x_discrete(name = 'Condition',
limits = c('sextet_base','sextet_rand','triad_base','triad_rand', 'triad_goes'),
labels = c('Base\n5 Targets', 'No Base\n6 Targets',
'Base\n2 Targets', 'No Base\n3 Targets', 'Goes\nWith')) +
coord_cartesian(ylim = c(0,1))
print(cond_plot)
}
}, movie.name = 'hex_sim_data_nobox.gif', interval = 0.1, ani.width = 700, ani.height = 600)
